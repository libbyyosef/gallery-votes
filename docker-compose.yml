services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "5432:5432"

  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    environment:
      # SQLAlchemy URL from inside the compose network
      DATABASE_URL: postgresql+psycopg://app:app@db:5432/app
      # if your app reads PORT / HOST, set them too
      HOST: 0.0.0.0
      PORT: 8000
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  web:
    build:
      context: .
      dockerfile: client/Dockerfile
      # Leave empty to use nginx proxy (/images -> backend)
      # Or set to http://backend:8000 to have the app call the API directly
      args:
        VITE_API_BASE_URL: ""
    depends_on:
      - backend
    ports:
      - "8080:80"

volumes:
  pgdata:
